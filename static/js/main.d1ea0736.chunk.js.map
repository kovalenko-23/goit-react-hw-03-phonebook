{"version":3,"sources":["Components/ContactsForm/ContactsForm.styled.jsx","Components/ContactsForm/ContactsForm.jsx","Components/ContactsItem/ContactsItem.styled.jsx","Components/ContactsItem/ContactsItem.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactsList.jsx","Components/ContactsFilter/ContactsFilter.styled.jsx","Components/ContactsFilter/ContactsFilter.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","styled","form","Label","label","props","bottom","Input","input","ButtonAdd","button","ContactsForm","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","onSubmit","reset","this","type","onChange","pattern","title","required","Component","Contact","li","ContactItem","p","DeleteContactBtn","ContactsItem","id","onDeleteButton","onClick","List","ul","ContactsList","contacts","map","Wrapper","div","Filterlabel","FilterInput","ContactsFilter","App","filter","handleOnSubmitForm","contact","includes","alert","newContact","shortid","generate","hendleFinder","deleteContact","prevState","getVisibleContacts","normalizedFilter","toLocaleLowerCase","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1ea0736.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n`;\n\nexport const Label = styled.label`\n  display: inline-flex;\n  justify-content: space-between;\n  font-weight: bold;\n  margin-bottom: ${(props) => (props.bottom ? \"20px\" : \"8px\")};\n`;\n\nexport const Input = styled.input`\n  margin-left: 6px;\n`;\n\nexport const ButtonAdd = styled.button`\n  height: 30px;\n  font-weight: bold;\n  font-size: 16px;\n  background-color: #c1f3d9;\n`;\n","import { Component } from \"react\";\nimport { Form, Label, Input, ButtonAdd } from \"./ContactsForm.styled\";\nimport PropTypes from \"prop-types\";\n\nexport class ContactsForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </Label>\n        <Label bottom>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </Label>\n        <ButtonAdd type=\"submit\">Add to contacts</ButtonAdd>\n      </Form>\n    );\n  }\n}\n\nexport default ContactsForm;\n\nContactsForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Contact = styled.li`\n  display: inline-flex;\n  justify-content: space-between;\n  width: 300px;\n  margin-bottom: 20px;\n  padding: 10px;\n  font-size: 15px;\n  border: 1px solid;\n`;\n\nexport const ContactItem = styled.p`\n  margin: 0;\n  margin-right: 6px;\n`;\nexport const DeleteContactBtn = styled.button`\n  font-size: 12px;\n  font-weight: bold;\n`;\n","import { Contact, ContactItem, DeleteContactBtn } from \"./ContactsItem.styled\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsItem = ({ id, name, number, onDeleteButton }) => {\n  return (\n    <Contact id={id}>\n      <ContactItem>{name}:</ContactItem>\n      <ContactItem>{number}</ContactItem>\n      <DeleteContactBtn type=\"button\" onClick={() => onDeleteButton(id)}>\n        Delete\n      </DeleteContactBtn>\n    </Contact>\n  );\n};\n\nexport default ContactsItem;\n\nContactsItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteButton: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n","import ContactsItem from \"../ContactsItem/ContactsItem\";\nimport { List } from \"./ContactList.styled\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsList = ({ contacts, onDeleteButton }) => {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ContactsItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteButton={onDeleteButton}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contonDeleteButtonacts: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  margin-bottom: 30px;\n`;\nexport const Filterlabel = styled.label`\n  padding: 15px;\n  border: 1px solid black;\n  font-weight: bold;\n`;\nexport const FilterInput = styled.input`\n  margin-left: 8px;\n`;\n","import { Wrapper, Filterlabel, FilterInput } from \"./ContactsFilter.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const ContactsFilter = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Filterlabel>\n        Find\n        <FilterInput\n          type=\"text\"\n          name=\"message\"\n          value={value}\n          onChange={onChange}\n        />\n      </Filterlabel>\n    </Wrapper>\n  );\n};\n\nContactsFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport styled from \"@emotion/styled\";\nimport ContactsForm from \"./Components/ContactsForm/ContactsForm\";\nimport ContactsList from \"./Components/ContactList/ContactsList\";\nimport { ContactsFilter } from \"./Components/ContactsFilter/ContactsFilter\";\n\nconst Wrapper = styled.div`\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n\n    filter: \"\",\n  };\n\n  handleOnSubmitForm = ({ name, number }) => {\n    const contactsName = this.state.contacts.map((contact) => contact.name);\n\n    if (contactsName.includes(name)) {\n      alert(`You already have ${name} in your contacts!`);\n    } else {\n      const newContact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n\n      this.setState(({ contacts }) => ({\n        contacts: [newContact, ...contacts],\n      }));\n    }\n  };\n\n  hendleFinder = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Wrapper>\n        <h1>Phonebook</h1>\n        <ContactsForm onSubmit={this.handleOnSubmitForm} />\n        <h2>Contacts</h2>\n        <ContactsFilter value={this.filter} onChange={this.hendleFinder} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteButton={this.deleteContact}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}